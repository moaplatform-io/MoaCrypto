const MoaWallet=function(){const t=new class{constructor(){switch(this.VERSION_INFO=1,this.OS_NAME="WebBrowser",this.SYMMETRIC_ALG="AES/CTR/NoPadding",this.SYMMETRIC_KEY_SIZE=256,this.HASH_ALG="SHA256",this.SIGNATURE_ALG="SHA256withECDSA",this.ECC_CURVE="secp256r1",this.MAC_ALG="HmacSHA256",this.ITERATION_COUNT=4096,this.HASH_ALG){case"SHA3-256":case"SHA256":this.SALT_SIZE=32;break;case"SHA3-384":case"SHA384":this.SALT_SIZE=48;break;case"SHA3-512":case"SHA512":this.SALT_SIZE=64}}},e=(t,e)=>{let r;if(1e7==t){const t=o(1e7,e);e.target=t.ciphertext,r=a(1e7,e)}else if(2e7==t){const t=a(2e7,e);e.target=t.toString(CryptoJS.enc.Base64),r=o(2e7,e)}return r},r=e=>{return CryptoJS.PBKDF2(e.psw,e.salt,{keySize:12,hasher:CryptoJS.algo.SHA384,iterations:null==e.cnt?t.ITERATION_COUNT:e.cnt}).toString(CryptoJS.enc.Hex)},o=(t,e)=>{const o=r(e),a=CryptoJS.enc.Hex.parse(o.substr(0,64)),n=CryptoJS.enc.Hex.parse(o.substr(64,32));let s;return 1e7==t?s=CryptoJS.AES.encrypt(CryptoJS.enc.Hex.parse(e.target),a,{mode:CryptoJS.mode.CTR,iv:n,padding:CryptoJS.pad.NoPadding}):2e7==t&&(s=CryptoJS.AES.decrypt(e.target,a,{mode:CryptoJS.mode.CTR,iv:n,padding:CryptoJS.pad.NoPadding})),s},a=(t,e)=>{let r;return 1e7==t?r=CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES,e.target,e.psw,{format:CryptoJS.format.OpenSSL}):2e7==t&&(r=CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES,e.target,e.psw,{format:CryptoJS.format.OpenSSL})),r},n=t=>{const e=CryptoJS.SHA256(t).toString(CryptoJS.enc.Hex).substr(24,64);return CryptoJS.enc.Hex.parse(e)},s=e=>{const r=CryptoJS.SHA256(e.saltAndPsw),o=e.version+e.os+e.type+e.saltAndPsw.toString(CryptoJS.enc.Hex).substr(0,2*t.SALT_SIZE)+e.iterationCnt+CryptoJS.enc.Base64.parse(e.target.toString()).toString(CryptoJS.enc.Hex)+e.puk.toString()+e.address.toString(CryptoJS.enc.Hex);return CryptoJS.HmacSHA256(CryptoJS.enc.Utf8.parse(o),r)},S=e=>{const r=p(e.type);null==localStorage.getItem(r.version)?(localStorage.setItem("Wallet.Type",e.type),localStorage.setItem(r.version,t.VERSION_INFO),localStorage.setItem(r.os,t.OS_NAME),localStorage.setItem(r.salt,e.salt.toString(CryptoJS.enc.Hex)),localStorage.setItem(r.iterationCnt,t.ITERATION_COUNT),localStorage.setItem(r.cipheredData,CryptoJS.enc.Base64.parse(e.target.toString()).toString(CryptoJS.enc.Hex)),localStorage.setItem(r.walletPuk,e.puk),localStorage.setItem(r.walletAddr,e.address.toString(CryptoJS.enc.Hex)),localStorage.setItem(r.macData,e.mac.toString(CryptoJS.enc.Hex))):alert("wallet already exist!")},p=t=>{let e="Version.Info",r="OS.Info",o="Salt.Value",a="Iteration.Count",n="Ciphered.Data",s="Wallet.PublicKey",S="Wallet.Addr",p="MAC.Data";if(t.indexOf("R")>-1){const t="R.";e=t+e,r=t+r,o=t+o,a=t+a,n=t+n,s=t+s,S=t+S,p=t+p}return walletProperties={version:e,os:r,salt:o,iterationCnt:a,cipheredData:n,walletPuk:s,walletAddr:S,macData:p}},l=t=>{const e=CryptoJS.SHA256(t),r=CryptoJS.HmacSHA256(CryptoJS.enc.Utf8.parse(t),e).toString(CryptoJS.enc.Hex);return(t=>{const e=[];let r;for(let o=0;o<t.length;++o){r=t[o];for(let t=3;t>=0;--t)e.push(r>>8*t&255)}return e})(e.words)[0]%2==0?r.substr(28,28):r.substr(0,28)},c=t=>(t<0&&(t=255+t+1),("00"+t.toString(16)).substr(-2));return{TYPE_RESTORE:"R",TYPE_NORMAL:"",createNonRestoreWallet:r=>{let o=MoaECDSACoreAPI.doGenerate(t.ECC_CURVE);const a=CryptoJS.lib.WordArray.random(t.SALT_SIZE),p=e(1e7,{target:o.ecprvhex,psw:r,salt:a});o.ecprvhex=null;const l=n(o.ecpubhex),c=a.toString(CryptoJS.enc.Hex)+CryptoJS.enc.Utf8.parse(r).toString(CryptoJS.enc.Hex);r=null;const i=s({version:t.VERSION_INFO,os:t.OS_NAME,type:"",saltAndPsw:c,iterationCnt:t.ITERATION_COUNT,target:p,puk:o.ecpubhex,address:l});S({type:"",salt:a,target:p,puk:o.ecpubhex,address:l,mac:i})},generateRestoreDataFormat:e=>{let r=MoaECDSACoreAPI.doGenerate(t.ECC_CURVE);const a=CryptoJS.lib.WordArray.random(t.SALT_SIZE);let n={target:r.ecprvhex,psw:e,salt:a};const s=o(1e7,n);n.target=r.ecpubhex;const S=o(1e7,n);return CryptoJS.HmacSHA256(CryptoJS.enc.Base64.parse(S.toString()),e).toString(CryptoJS.enc.Base64)+"%"+s.toString()+"$"+S.toString()+"$"+a.toString(CryptoJS.enc.Base64)},createRestoreWallet:(e,r)=>{if(null==r)return;const p=r.split("$");let l=CryptoJS.enc.Hex.parse(CryptoJS.enc.Base64.parse(p[0]).toString(CryptoJS.enc.Hex)),c=p[1];const i=CryptoJS.enc.Base64.parse(p[2]);l=a(1e7,{target:l,psw:e,salt:i}),c=o(2e7,{target:c,psw:e,salt:i});const C=n(c),g=i.toString(CryptoJS.enc.Hex)+CryptoJS.enc.Utf8.parse(e).toString(CryptoJS.enc.Hex);e=null;const y=s({version:t.VERSION_INFO,os:t.OS_NAME,type:"R",saltAndPsw:g,iterationCnt:t.ITERATION_COUNT,target:l,puk:c,address:C});S({type:"R",salt:i,target:l,puk:c,address:C,mac:y})},getPublicKey:()=>localStorage.getItem("Wallet.Type").indexOf("R")>-1?localStorage.getItem("R.Wallet.PublicKey"):localStorage.getItem("Wallet.PublicKey"),getWalletAddr:()=>localStorage.getItem("Wallet.Type").indexOf("R")>-1?localStorage.getItem("R.Wallet.Addr"):localStorage.getItem("Wallet.Addr"),generateTransactionSign:(r,o)=>{const a=localStorage.getItem("Wallet.Type");if(!((t,e)=>{const r=p(t),o={version:localStorage.getItem(r.version),os:localStorage.getItem(r.os),type:t,saltAndPsw:localStorage.getItem(r.salt)+CryptoJS.enc.Utf8.parse(e).toString(CryptoJS.enc.Hex),iterationCnt:localStorage.getItem(r.iterationCnt),target:CryptoJS.enc.Hex.parse(localStorage.getItem(r.cipheredData)).toString(CryptoJS.enc.Base64),puk:localStorage.getItem(r.walletPuk),address:localStorage.getItem(r.walletAddr)};return-1!=localStorage.getItem(r.macData).indexOf(s(o).toString())||(alert("[#] moaWallet Data Integrity Verify Error!"),!1)})(a,o))return;let n,S;a.indexOf("R")>-1?(n=CryptoJS.enc.Hex.parse(localStorage.getItem("R.Ciphered.Data")).toString(CryptoJS.enc.Base64),S=CryptoJS.enc.Hex.parse(localStorage.getItem("R.Salt.Value"))):(n=CryptoJS.enc.Hex.parse(localStorage.getItem("Ciphered.Data")).toString(CryptoJS.enc.Base64),S=CryptoJS.enc.Hex.parse(localStorage.getItem("Salt.Value")));const l=e(2e7,{target:n,psw:o,salt:S});return MoaECDSACoreAPI.doSign(t.ECC_CURVE,t.SIGNATURE_ALG,r,l.toString())},verifyTransactionSign:(e,r,o)=>MoaECDSACoreAPI.doVerify(t.ECC_CURVE,t.SIGNATURE_ALG,e,r,o),setType:t=>{-1==t.indexOf("")&&-1==t.indexOf("R")||localStorage.setItem("Wallet.Type",t)},convertRestoreDataFormat:t=>{const e=t.split("$"),r=e[e.length-2],o=CryptoJS.enc.Base64.parse(e[e.length-1]).toString(),a=CryptoJS.enc.Hex.parse(o.substr(0,o.length-128)).toString(CryptoJS.enc.Base64),n=CryptoJS.enc.Hex.parse(o.substr(o.length-64,64)).toString(CryptoJS.enc.Base64);return r.concat("$").concat(a).concat("$").concat(n)},getHmacPsw:t=>l(t),getEncryptedHmacPsw:(t,e,o)=>{const a=l(e),n=r(data={psw:o,salt:t,cnt:10}),s=CryptoJS.AES.encrypt(CryptoJS.enc.Hex.parse(CryptoJS.lib.WordArray.random(1)+a),CryptoJS.enc.Hex.parse(n.substr(0,64)),{mode:CryptoJS.mode.CBC,iv:CryptoJS.enc.Hex.parse(n.substr(64,32)),padding:CryptoJS.pad.Pkcs7}),S=CryptoJS.HmacSHA256(CryptoJS.enc.Base64.parse(s.toString()),o).toString();let p="";for(let t=0;t<S.length/2;t+=2)p+=c(parseInt(S.substr(t,2),16)^parseInt(S.substr(S.length/2+t,2),16));return CryptoJS.enc.Base64.parse(s.toString()).toString(CryptoJS.enc.Hex)+p},verifyPsw:(t,e)=>{const r=e.split("$"),o=CryptoJS.enc.Base64.parse(r[3]).toString(CryptoJS.enc.Hex).substr(0,130),a=CryptoJS.enc.Base64.parse(r[3]).toString(CryptoJS.enc.Hex).substr(130,64),n=CryptoJS.HmacSHA256(CryptoJS.enc.Hex.parse(o),t).toString(CryptoJS.enc.Hex);return 0==a.indexOf(n)}}}();